{"version":3,"file":"mylib.cjs.production.min.js","sources":["../src/useMediaQuery.ts","../src/usePrevious.ts"],"sourcesContent":["import { useCallback, useEffect, useState } from 'react';\n\nconst useMediaQuery = (minWidth: number) => {\n  const [targetReached, setTargetReached] = useState(false);\n\n  const updateTarget = useCallback((event: MediaQueryListEvent) => {\n    setTargetReached(event.matches);\n  }, []);\n\n  useEffect(() => {\n    const media = window.matchMedia(`(min-width: ${minWidth}px)`);\n    media.addEventListener('change', updateTarget);\n\n    if (media.matches) {\n      setTargetReached(true);\n    }\n\n    return () => media.removeEventListener('change', updateTarget);\n  }, []);\n\n  return targetReached;\n};\n\nexport default useMediaQuery;\n","import { useEffect, useRef } from 'react';\n\nconst usePrevious = (value: any) => {\n  const ref = useRef();\n\n  useEffect(() => {\n    ref.current = value;\n  });\n\n  return ref.current;\n};\n\nexport default usePrevious;\n"],"names":["minWidth","_useState","useState","targetReached","setTargetReached","updateTarget","useCallback","event","matches","useEffect","media","window","matchMedia","addEventListener","removeEventListener","value","ref","useRef","current"],"mappings":"iHAEsB,SAACA,GACrB,IAAAC,EAA0CC,YAAS,GAA5CC,EAAaF,KAAEG,EAAgBH,KAEhCI,EAAeC,eAAY,SAACC,GAChCH,EAAiBG,EAAMC,WACtB,IAaH,OAXAC,aAAU,WACR,IAAMC,EAAQC,OAAOC,0BAA0BZ,SAO/C,OANAU,EAAMG,iBAAiB,SAAUR,GAE7BK,EAAMF,SACRJ,GAAiB,GAGZ,WAAA,OAAMM,EAAMI,oBAAoB,SAAUT,MAChD,IAEIF,uBClBW,SAACY,GACnB,IAAMC,EAAMC,WAMZ,OAJAR,aAAU,WACRO,EAAIE,QAAUH,KAGTC,EAAIE"}